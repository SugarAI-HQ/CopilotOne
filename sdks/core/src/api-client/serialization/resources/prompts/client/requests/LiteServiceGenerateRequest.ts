/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as SugarAiApi from "../../../../../api";
import * as core from "../../../../../core";

export const LiteServiceGenerateRequest: core.serialization.Schema<
  serializers.LiteServiceGenerateRequest.Raw,
  SugarAiApi.LiteServiceGenerateRequest
> = core.serialization.object({
  router: core.serialization.lazyObject(
    async () => (await import("../../../..")).LiteServiceGenerateRequestRouter,
  ),
  variables: core.serialization.record(
    core.serialization.string(),
    core.serialization.unknown(),
  ),
  messages: core.serialization
    .list(
      core.serialization.lazyObject(
        async () =>
          (await import("../../../..")).LiteServiceGenerateRequestMessagesItem,
      ),
    )
    .optional(),
  attachments: core.serialization
    .record(core.serialization.string(), core.serialization.unknown())
    .optional(),
  skills: core.serialization
    .list(
      core.serialization.lazyObject(
        async () =>
          (await import("../../../..")).LiteServiceGenerateRequestSkillsItem,
      ),
    )
    .optional(),
  skillChoice: core.serialization
    .lazy(
      async () =>
        (await import("../../../..")).LiteServiceGenerateRequestSkillChoice,
    )
    .optional(),
  scope: core.serialization
    .lazyObject(
      async () => (await import("../../../..")).LiteServiceGenerateRequestScope,
    )
    .optional(),
  isDevelopment: core.serialization.boolean().optional(),
  chat: core.serialization
    .lazyObject(
      async () => (await import("../../../..")).LiteServiceGenerateRequestChat,
    )
    .optional(),
  copilotId: core.serialization.string().optional(),
  environment: core.serialization
    .lazy(
      async () =>
        (await import("../../../..")).LiteServiceGenerateRequestEnvironment,
    )
    .optional(),
  version: core.serialization.string().optional(),
  userId: core.serialization.string().optional(),
  promptPackageId: core.serialization.string().optional(),
  promptTemplateId: core.serialization.string().optional(),
  promptVersionId: core.serialization.string().optional(),
});

export declare namespace LiteServiceGenerateRequest {
  interface Raw {
    router: serializers.LiteServiceGenerateRequestRouter.Raw;
    variables: Record<string, unknown>;
    messages?: serializers.LiteServiceGenerateRequestMessagesItem.Raw[] | null;
    attachments?: Record<string, unknown> | null;
    skills?: serializers.LiteServiceGenerateRequestSkillsItem.Raw[] | null;
    skillChoice?: serializers.LiteServiceGenerateRequestSkillChoice.Raw | null;
    scope?: serializers.LiteServiceGenerateRequestScope.Raw | null;
    isDevelopment?: boolean | null;
    chat?: serializers.LiteServiceGenerateRequestChat.Raw | null;
    copilotId?: string | null;
    environment?: serializers.LiteServiceGenerateRequestEnvironment.Raw | null;
    version?: string | null;
    userId?: string | null;
    promptPackageId?: string | null;
    promptTemplateId?: string | null;
    promptVersionId?: string | null;
  }
}
