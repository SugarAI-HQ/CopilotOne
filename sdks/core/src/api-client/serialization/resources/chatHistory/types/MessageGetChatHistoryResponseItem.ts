/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SugarAiApi from "../../../../api";
import * as core from "../../../../core";

export const MessageGetChatHistoryResponseItem: core.serialization.ObjectSchema<
  serializers.MessageGetChatHistoryResponseItem.Raw,
  SugarAiApi.MessageGetChatHistoryResponseItem
> = core.serialization.object({
  copilotId: core.serialization.string(),
  logId: core.serialization.string().optional(),
  content: core.serialization.string(),
  role: core.serialization.lazy(
    async () =>
      (await import("../../..")).MessageGetChatHistoryResponseItemRole,
  ),
  chatId: core.serialization.string(),
  metadata: core.serialization
    .lazy(
      async () =>
        (await import("../../..")).MessageGetChatHistoryResponseItemMetadata,
    )
    .optional(),
  id: core.serialization.string(),
  userId: core.serialization.string(),
  createdAt: core.serialization.date(),
  updatedAt: core.serialization.date(),
});

export declare namespace MessageGetChatHistoryResponseItem {
  interface Raw {
    copilotId: string;
    logId?: string | null;
    content: string;
    role: serializers.MessageGetChatHistoryResponseItemRole.Raw;
    chatId: string;
    metadata?: serializers.MessageGetChatHistoryResponseItemMetadata.Raw | null;
    id: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
  }
}
