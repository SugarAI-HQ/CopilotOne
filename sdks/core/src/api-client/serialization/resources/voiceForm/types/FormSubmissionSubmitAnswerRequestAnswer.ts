/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SugarAiApi from "../../../../api";
import * as core from "../../../../core";

export const FormSubmissionSubmitAnswerRequestAnswer: core.serialization.ObjectSchema<
  serializers.FormSubmissionSubmitAnswerRequestAnswer.Raw,
  SugarAiApi.FormSubmissionSubmitAnswerRequestAnswer
> = core.serialization.object({
  recording: core.serialization
    .lazyObject(
      async () =>
        (await import("../../.."))
          .FormSubmissionSubmitAnswerRequestAnswerRecording,
    )
    .optional(),
  rawAnswer: core.serialization.string().optional(),
  evaluatedAnswer: core.serialization.string().optional(),
  by: core.serialization.lazy(
    async () =>
      (await import("../../..")).FormSubmissionSubmitAnswerRequestAnswerBy,
  ),
});

export declare namespace FormSubmissionSubmitAnswerRequestAnswer {
  interface Raw {
    recording?: serializers.FormSubmissionSubmitAnswerRequestAnswerRecording.Raw | null;
    rawAnswer?: string | null;
    evaluatedAnswer?: string | null;
    by: serializers.FormSubmissionSubmitAnswerRequestAnswerBy.Raw;
  }
}
