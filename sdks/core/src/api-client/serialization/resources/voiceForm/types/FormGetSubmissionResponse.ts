/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SugarAiApi from "../../../../api";
import * as core from "../../../../core";

export const FormGetSubmissionResponse: core.serialization.ObjectSchema<
  serializers.FormGetSubmissionResponse.Raw,
  SugarAiApi.FormGetSubmissionResponse
> = core.serialization.object({
  id: core.serialization.string(),
  formId: core.serialization.string(),
  userId: core.serialization.string(),
  clientUserId: core.serialization.string(),
  metadata: core.serialization.lazy(
    async () => (await import("../../..")).FormGetSubmissionResponseMetadata,
  ),
  submittedAt: core.serialization.date().optional(),
  createdAt: core.serialization.date(),
  updatedAt: core.serialization.date(),
  answers: core.serialization.list(
    core.serialization.lazyObject(
      async () =>
        (await import("../../..")).FormGetSubmissionResponseAnswersItem,
    ),
  ),
});

export declare namespace FormGetSubmissionResponse {
  interface Raw {
    id: string;
    formId: string;
    userId: string;
    clientUserId: string;
    metadata: serializers.FormGetSubmissionResponseMetadata.Raw;
    submittedAt?: string | null;
    createdAt: string;
    updatedAt: string;
    answers: serializers.FormGetSubmissionResponseAnswersItem.Raw[];
  }
}
